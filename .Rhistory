plot(res[,1], ylim = yl, xlab = expression(paste("VAR(1) parameter ", rho)), main=expression(paste(n == 200, " and ", p == 60)), ylab = 'log(MAE)', type = 'o', pch = 16, col = 'blue', xaxt = "n")
lines(res[,2], type = 'o', pch = 15, col = 'red')
lines(res[,3], type = 'o', pch = 17, col = 'navy')
lines(res[,4], type = 'o', pch = 18, col = 'orange')
axis(1, at=1:11, labels=rhoval)
legend(11.3,-2,c("SDFM", "SPCA", "DFM", "Varimax"), pch = c(16,15,17,18), lty = c(1,1,1,1), col = c('blue','red','navy','orange'), bty='n', xpd=NA)
par(oma=c(0, 0, 0, 5))
plot(res[,1], ylim = yl, xlab = expression(paste("VAR(1) parameter ", rho)), main=expression(paste(n == 200, " and ", p == 60)), ylab = 'log(MAE)', type = 'o', pch = 16, col = 'blue', xaxt = "n")
lines(res[,2], type = 'o', pch = 15, col = 'red')
lines(res[,3], type = 'o', pch = 17, col = 'navy')
lines(res[,4], type = 'o', pch = 18, col = 'orange')
axis(1, at=1:11, labels=rhoval)
legend(11.5,-1.5,c("SDFM", "SPCA", "DFM", "Varimax"), pch = c(16,15,17,18), lty = c(1,1,1,1), col = c('blue','red','navy','orange'), bty='n', xpd=NA)
lr1 = readRDS('lods_new_120_1.rds')
lr1 = readRDS('lods_new120_1.rds')
View(lr1)
View(lr1)
setwd('C:/Users/mosleyl/OneDrive - Lancaster University/PhD/Nowcasting/Sparse DFM/Simulations')
output_table = read.csv('lambda_recovery.csv')
View(output_table)
# plot 1 - n = 50, rho = 0
sdfm = output_table[1:3,4]
spca = output_table[1:3,5]
dfm = output_table[1:3,6]
vari = output_table[1:3,7]
sdfm = log(sdfm)
spca = log(spca)
dfm = log(dfm)
vari = log(vari)
yl = c(-3.03, -1.03)
pval=c(paste0('p=',18), paste0('p=',60), paste0('p=',180))
#pdf("lam050.pdf", height=6, width=8)
par(oma=c(0, 0, 0, 5))
plot(sdfm, ylim = yl, xlab = 'Number of variables', main=expression(paste(n == 50, " and ", rho == 0)), ylab = 'log(MAE)', type = 'o', pch = 16, col = 'blue', xaxt = "n")
lines(spca, type = 'o', pch = 15, col = 'red')
lines(dfm, type = 'o', pch = 17, col = 'navy')
lines(vari, type = 'o', pch = 18, col = 'orange')
axis(1, at=1:3, labels=pval)
legend(3.1,-1.5,c("SDFM", "SPCA", "DFM", "Varimax"), pch = c(16,15,17,18), lty = c(1,1,1,1), col = c('blue','red','navy','orange'), bty='n', xpd=NA)
#dev.off()
output_table = output_table[,-1]
# plot 1 - n = 50, rho = 0
sdfm = output_table[1:3,4]
spca = output_table[1:3,5]
dfm = output_table[1:3,6]
vari = output_table[1:3,7]
sdfm = log(sdfm)
spca = log(spca)
dfm = log(dfm)
vari = log(vari)
yl = c(-3.03, -1.03)
pval=c(paste0('p=',18), paste0('p=',60), paste0('p=',180))
#pdf("lam050.pdf", height=6, width=8)
par(oma=c(0, 0, 0, 5))
plot(sdfm, ylim = yl, xlab = 'Number of variables', main=expression(paste(n == 50, " and ", rho == 0)), ylab = 'log(MAE)', type = 'o', pch = 16, col = 'blue', xaxt = "n")
lines(spca, type = 'o', pch = 15, col = 'red')
lines(dfm, type = 'o', pch = 17, col = 'navy')
lines(vari, type = 'o', pch = 18, col = 'orange')
axis(1, at=1:3, labels=pval)
legend(3.1,-1.5,c("SDFM", "SPCA", "DFM", "Varimax"), pch = c(16,15,17,18), lty = c(1,1,1,1), col = c('blue','red','navy','orange'), bty='n', xpd=NA)
#dev.off()
tab = output_table[1:3,4:7]
tab
View(lr1)
tab[4,] = lr1[unlist(lr1)[1:4]]
tab = rbind(tab,lr1[unlist(lr1)[1:4]])
tab
lr1[unlist(lr1)[1:4]]
unlist(lr1)[1:4]
tab = output_table[1:3,4:7]
tab = rbind(tab,unlist(lr1)[1:4])
tab
tab = tab[c(1,2,4,3),]
tab
tab = output_table[1:3,4:7]
tab = rbind(tab,unlist(lr1)[1:4])
tab = tab[c(1,2,4,3),]
tab = log(tab)
yl = c(min(tab), max(tab))
pval=c(paste0('p=',18), paste0('p=',60), paste0('p=',120), paste0('p=',180))
#pdf("lam050.pdf", height=6, width=8)
par(oma=c(0, 0, 0, 5))
plot(tab[,1], ylim = yl, xlab = 'Number of variables', main=expression(paste(n == 50, " and ", rho == 0)), ylab = 'log(MAE)', type = 'o', pch = 16, col = 'blue', xaxt = "n")
lines(tab[,2], type = 'o', pch = 15, col = 'red')
lines(tab[,3], type = 'o', pch = 17, col = 'navy')
lines(tab[,4], type = 'o', pch = 18, col = 'orange')
axis(1, at=1:4, labels=pval)
legend(3.1,-1.5,c("SDFM", "SPCA", "DFM", "Varimax"), pch = c(16,15,17,18), lty = c(1,1,1,1), col = c('blue','red','navy','orange'), bty='n', xpd=NA)
#dev.off()
tab = output_table[1:3,4:7]
tab = rbind(tab,unlist(lr1)[1:4])
tab = tab[c(1,2,4,3),]
tab = log(tab)
yl = c(min(tab), max(tab))
pval=c(paste0('p=',18), paste0('p=',60), paste0('p=',120), paste0('p=',180))
#pdf("lam050.pdf", height=6, width=8)
par(oma=c(0, 0, 0, 5))
plot(tab[,1], ylim = yl, xlab = 'Number of variables', main=expression(paste(n == 50, " and ", rho == 0)), ylab = 'log(MAE)', type = 'o', pch = 16, col = 'blue', xaxt = "n")
lines(tab[,2], type = 'o', pch = 15, col = 'red')
lines(tab[,3], type = 'o', pch = 17, col = 'navy')
lines(tab[,4], type = 'o', pch = 18, col = 'orange')
axis(1, at=1:4, labels=pval)
legend(4.1,-1.5,c("SDFM", "SPCA", "DFM", "Varimax"), pch = c(16,15,17,18), lty = c(1,1,1,1), col = c('blue','red','navy','orange'), bty='n', xpd=NA)
#dev.off()
tab = output_table[1:3,4:7]
tab = rbind(tab,unlist(lr1)[1:4])
tab = tab[c(1,2,4,3),]
tab = log(tab)
yl = c(min(tab), max(tab))
pval=c(paste0('p=',18), paste0('p=',60), paste0('p=',120), paste0('p=',180))
#pdf("lam050.pdf", height=6, width=8)
par(oma=c(0, 0, 0, 5))
plot(tab[,1], ylim = yl, xlab = 'Number of variables', main=expression(paste(n == 50, " and ", rho == 0)), ylab = 'log(MAE)', type = 'o', pch = 16, col = 'blue', xaxt = "n")
lines(tab[,2], type = 'o', pch = 15, col = 'red')
lines(tab[,3], type = 'o', pch = 17, col = 'navy')
lines(tab[,4], type = 'o', pch = 18, col = 'orange')
axis(1, at=1:4, labels=pval)
legend(4.2,-1.5,c("SDFM", "SPCA", "DFM", "Varimax"), pch = c(16,15,17,18), lty = c(1,1,1,1), col = c('blue','red','navy','orange'), bty='n', xpd=NA)
#dev.off()
A = matrix(c(0.8,1,0,
0,0.8,0,
1,0,0.8),ncol=3,byrow=TRUE)
eigen(A)
A = matrix(c(0.8,100,0,
0,0.8,0,
100,0,0.8),ncol=3,byrow=TRUE)
eigen(A)
pdf("lam050_2.pdf", height=6, width=8)
par(oma=c(0, 0, 0, 5))
plot(tab[,1], ylim = yl, xlab = 'Number of variables', main=expression(paste(n == 50, " and ", rho == 0)), ylab = 'log(MAE)', type = 'o', pch = 16, col = 'blue', xaxt = "n")
lines(tab[,2], type = 'o', pch = 15, col = 'red')
lines(tab[,3], type = 'o', pch = 17, col = 'navy')
lines(tab[,4], type = 'o', pch = 18, col = 'orange')
axis(1, at=1:4, labels=pval)
legend(4.2,-1.5,c("SDFM", "SPCA", "DFM", "Varimax"), pch = c(16,15,17,18), lty = c(1,1,1,1), col = c('blue','red','navy','orange'), bty='n', xpd=NA)
dev.off()
par(oma=c(0, 0, 0, 5))
plot(tab[,1], ylim = yl, xlab = 'Number of variables', main=expression(paste(n == 50, " and ", rho == 0)), ylab = 'log(MAE)', type = 'o', pch = 16, col = 'blue', xaxt = "n")
lines(tab[,2], type = 'o', pch = 15, col = 'red')
lines(tab[,3], type = 'o', pch = 17, col = 'navy')
lines(tab[,4], type = 'o', pch = 18, col = 'orange')
axis(1, at=1:4, labels=pval, pch = 2)
legend(4.2,-1.5,c("SDFM", "SPCA", "DFM", "Varimax"), pch = c(16,15,17,18), lty = c(1,1,1,1), col = c('blue','red','navy','orange'), bty='n', xpd=NA)
par(oma=c(0, 0, 0, 5))
plot(tab[,1], ylim = yl, xlab = 'Number of variables', main=expression(paste(n == 50, " and ", rho == 0)), ylab = 'log(MAE)', type = 'o', pch = 16, col = 'blue', xaxt = "n", cex.lab = 2, cex.axis = 2)
lines(tab[,2], type = 'o', pch = 15, col = 'red')
lines(tab[,3], type = 'o', pch = 17, col = 'navy')
lines(tab[,4], type = 'o', pch = 18, col = 'orange')
axis(1, at=1:4, labels=pval, cex.axis = 2, cex.lab = 2)
legend(4.2,-1.5,c("SDFM", "SPCA", "DFM", "Varimax"), pch = c(16,15,17,18), lty = c(1,1,1,1), col = c('blue','red','navy','orange'), bty='n', xpd=NA)
par(oma=c(0, 0, 0, 5))
plot(tab[,1], ylim = yl, xlab = 'Number of variables', main=expression(paste(n == 50, " and ", rho == 0)), ylab = 'log(MAE)', type = 'o', pch = 16, col = 'blue', xaxt = "n", cex.lab = 1.5, cex.axis = 1.5)
lines(tab[,2], type = 'o', pch = 15, col = 'red')
lines(tab[,3], type = 'o', pch = 17, col = 'navy')
lines(tab[,4], type = 'o', pch = 18, col = 'orange')
axis(1, at=1:4, labels=pval, cex.axis = 1.5, cex.lab = 1.5)
legend(4.2,-1.5,c("SDFM", "SPCA", "DFM", "Varimax"), pch = c(16,15,17,18), lty = c(1,1,1,1), col = c('blue','red','navy','orange'), bty='n', xpd=NA)
par(oma=c(0, 0, 0, 5))
plot(tab[,1], ylim = yl, xlab = 'Number of variables', main=expression(paste(n == 50, " and ", rho == 0)), ylab = 'log(MAE)', type = 'o', pch = 16, col = 'blue', xaxt = "n", cex.lab = 1.5, cex.axis = 1.5, cex.main = 1.5)
lines(tab[,2], type = 'o', pch = 15, col = 'red')
lines(tab[,3], type = 'o', pch = 17, col = 'navy')
lines(tab[,4], type = 'o', pch = 18, col = 'orange')
axis(1, at=1:4, labels=pval, cex.axis = 1.5, cex.lab = 1.5)
legend(4.2,-1.5,c("SDFM", "SPCA", "DFM", "Varimax"), pch = c(16,15,17,18), lty = c(1,1,1,1), col = c('blue','red','navy','orange'), bty='n', xpd=NA)
par(oma=c(0, 0, 0, 5))
plot(tab[,1], ylim = yl, xlab = 'Number of variables', main=expression(paste(n == 50, " and ", rho == 0)), ylab = 'log(MAE)', type = 'o', pch = 16, col = 'blue', xaxt = "n", cex.lab = 1.5, cex.axis = 1.5, cex.main = 1.5)
lines(tab[,2], type = 'o', pch = 15, col = 'red')
lines(tab[,3], type = 'o', pch = 17, col = 'navy')
lines(tab[,4], type = 'o', pch = 18, col = 'orange')
axis(1, at=1:4, labels=pval, cex.axis = 1.5, cex.lab = 1.5)
legend(4.2,-1.5,c("SDFM", "SPCA", "DFM", "Varimax"), pch = c(16,15,17,18), lty = c(1,1,1,1), col = c('blue','red','navy','orange'), bty='n', xpd=NA, cex = 1.5)
par(oma=c(0, 0, 0, 6))
plot(tab[,1], ylim = yl, xlab = 'Number of variables', main=expression(paste(n == 50, " and ", rho == 0)), ylab = 'log(MAE)', type = 'o', pch = 16, col = 'blue', xaxt = "n", cex.lab = 1.5, cex.axis = 1.5, cex.main = 1.5)
lines(tab[,2], type = 'o', pch = 15, col = 'red')
lines(tab[,3], type = 'o', pch = 17, col = 'navy')
lines(tab[,4], type = 'o', pch = 18, col = 'orange')
axis(1, at=1:4, labels=pval, cex.axis = 1.5, cex.lab = 1.5)
legend(4.2,-1.5,c("SDFM", "SPCA", "DFM", "Varimax"), pch = c(16,15,17,18), lty = c(1,1,1,1), col = c('blue','red','navy','orange'), bty='n', xpd=NA, cex = 1.5)
par(oma=c(0, 0, 0, 6))
plot(tab[,1], ylim = yl, xlab = 'Number of variables', main=expression(paste(n == 50, " and ", rho == 0)), ylab = 'log(MAE)', type = 'o', pch = 16, col = 'blue', xaxt = "n", cex.lab = 1.5, cex.axis = 1.5, cex.main = 1.5)
lines(tab[,2], type = 'o', pch = 15, col = 'red')
lines(tab[,3], type = 'o', pch = 17, col = 'navy')
lines(tab[,4], type = 'o', pch = 18, col = 'orange')
axis(1, at=1:4, labels=pval, cex.axis = 1.5, cex.lab = 1.5)
legend(4.2,-1.5,c("SDFM", "SPCA", "DFM", "Varimax"), pch = c(16,15,17,18), lty = c(1,1,1,1), col = c('blue','red','navy','orange'), bty='n', xpd=NA, cex = 1.3)
par(oma=c(0, 0, 0, 7))
plot(tab[,1], ylim = yl, xlab = 'Number of variables', main=expression(paste(n == 50, " and ", rho == 0)), ylab = 'log(MAE)', type = 'o', pch = 16, col = 'blue', xaxt = "n", cex.lab = 1.5, cex.axis = 1.5, cex.main = 1.5)
lines(tab[,2], type = 'o', pch = 15, col = 'red')
lines(tab[,3], type = 'o', pch = 17, col = 'navy')
lines(tab[,4], type = 'o', pch = 18, col = 'orange')
axis(1, at=1:4, labels=pval, cex.axis = 1.5, cex.lab = 1.5)
legend(4.2,-1.2,c("SDFM", "SPCA", "DFM", "Varimax"), pch = c(16,15,17,18), lty = c(1,1,1,1), col = c('blue','red','navy','orange'), bty='n', xpd=NA, cex = 1.3)
pdf("lam050_2.pdf", height=6, width=8)
par(oma=c(0, 0, 0, 7))
plot(tab[,1], ylim = yl, xlab = 'Number of variables', main=expression(paste(n == 50, " and ", rho == 0)), ylab = 'log(MAE)', type = 'o', pch = 16, col = 'blue', xaxt = "n", cex.lab = 1.5, cex.axis = 1.5, cex.main = 1.5)
lines(tab[,2], type = 'o', pch = 15, col = 'red')
lines(tab[,3], type = 'o', pch = 17, col = 'navy')
lines(tab[,4], type = 'o', pch = 18, col = 'orange')
axis(1, at=1:4, labels=pval, cex.axis = 1.5, cex.lab = 1.5)
legend(4.2,-1.2,c("SDFM", "SPCA", "DFM", "Varimax"), pch = c(16,15,17,18), lty = c(1,1,1,1), col = c('blue','red','navy','orange'), bty='n', xpd=NA, cex = 1.3)
dev.off()
par(oma=c(0, 0.5, 0, 6.5))
plot(tab[,1], ylim = yl, xlab = 'Number of variables', main=expression(paste(n == 50, " and ", rho == 0)), ylab = 'log(MAE)', type = 'o', pch = 16, col = 'blue', xaxt = "n", cex.lab = 1.5, cex.axis = 1.5, cex.main = 1.5)
lines(tab[,2], type = 'o', pch = 15, col = 'red')
lines(tab[,3], type = 'o', pch = 17, col = 'navy')
lines(tab[,4], type = 'o', pch = 18, col = 'orange')
axis(1, at=1:4, labels=pval, cex.axis = 1.5, cex.lab = 1.5)
legend(4.2,-1.2,c("SDFM", "SPCA", "DFM", "Varimax"), pch = c(16,15,17,18), lty = c(1,1,1,1), col = c('blue','red','navy','orange'), bty='n', xpd=NA, cex = 1.3)
pdf("lam050_2.pdf", height=6, width=8)
par(oma=c(0, 0.5, 0, 6.5))
plot(tab[,1], ylim = yl, xlab = 'Number of variables', main=expression(paste(n == 50, " and ", rho == 0)), ylab = 'log(MAE)', type = 'o', pch = 16, col = 'blue', xaxt = "n", cex.lab = 1.5, cex.axis = 1.5, cex.main = 1.5)
lines(tab[,2], type = 'o', pch = 15, col = 'red')
lines(tab[,3], type = 'o', pch = 17, col = 'navy')
lines(tab[,4], type = 'o', pch = 18, col = 'orange')
axis(1, at=1:4, labels=pval, cex.axis = 1.5, cex.lab = 1.5)
legend(4.2,-1.2,c("SDFM", "SPCA", "DFM", "Varimax"), pch = c(16,15,17,18), lty = c(1,1,1,1), col = c('blue','red','navy','orange'), bty='n', xpd=NA, cex = 1.3)
dev.off()
lr1 = readRDS('lods_new120_2.rds')
setwd('C:/Users/mosleyl/OneDrive - Lancaster University/FromStorm')
lr1 = readRDS('lods_new120_2.rds')
View(lr1)
View(output_table)
tab = output_table[19:21,4:7]
tab
tab = rbind(tab,unlist(lr1)[1:4])
tab = tab[c(1,2,4,3),]
tab
tab = log(tab)
yl = c(min(tab), max(tab))
pval=c(paste0('p=',18), paste0('p=',60), paste0('p=',120), paste0('p=',180))
#pdf("lam050_2.pdf", height=6, width=8)
par(oma=c(0, 0.5, 0, 6.5))
plot(tab[,1], ylim = yl, xlab = 'Number of variables', main=expression(paste(n == 50, " and ", rho == 0.9)), ylab = 'log(MAE)', type = 'o', pch = 16, col = 'blue', xaxt = "n", cex.lab = 1.5, cex.axis = 1.5, cex.main = 1.5)
lines(tab[,2], type = 'o', pch = 15, col = 'red')
lines(tab[,3], type = 'o', pch = 17, col = 'navy')
lines(tab[,4], type = 'o', pch = 18, col = 'orange')
axis(1, at=1:4, labels=pval, cex.axis = 1.5, cex.lab = 1.5)
legend(4.2,-1.2,c("SDFM", "SPCA", "DFM", "Varimax"), pch = c(16,15,17,18), lty = c(1,1,1,1), col = c('blue','red','navy','orange'), bty='n', xpd=NA, cex = 1.3)
pdf("lam0950_2.pdf", height=6, width=8)
par(oma=c(0, 0.5, 0, 6.5))
plot(tab[,1], ylim = yl, xlab = 'Number of variables', main=expression(paste(n == 50, " and ", rho == 0.9)), ylab = 'log(MAE)', type = 'o', pch = 16, col = 'blue', xaxt = "n", cex.lab = 1.5, cex.axis = 1.5, cex.main = 1.5)
lines(tab[,2], type = 'o', pch = 15, col = 'red')
lines(tab[,3], type = 'o', pch = 17, col = 'navy')
lines(tab[,4], type = 'o', pch = 18, col = 'orange')
axis(1, at=1:4, labels=pval, cex.axis = 1.5, cex.lab = 1.5)
legend(4.2,-1.2,c("SDFM", "SPCA", "DFM", "Varimax"), pch = c(16,15,17,18), lty = c(1,1,1,1), col = c('blue','red','navy','orange'), bty='n', xpd=NA, cex = 1.3)
dev.off()
setwd('C:/Users/mosleyl/OneDrive - Lancaster University/PhD/Nowcasting/Sparse DFM/Simulations')
pdf("lam0950_2.pdf", height=6, width=8)
par(oma=c(0, 0.5, 0, 6.5))
plot(tab[,1], ylim = yl, xlab = 'Number of variables', main=expression(paste(n == 50, " and ", rho == 0.9)), ylab = 'log(MAE)', type = 'o', pch = 16, col = 'blue', xaxt = "n", cex.lab = 1.5, cex.axis = 1.5, cex.main = 1.5)
lines(tab[,2], type = 'o', pch = 15, col = 'red')
lines(tab[,3], type = 'o', pch = 17, col = 'navy')
lines(tab[,4], type = 'o', pch = 18, col = 'orange')
axis(1, at=1:4, labels=pval, cex.axis = 1.5, cex.lab = 1.5)
legend(4.2,-1.2,c("SDFM", "SPCA", "DFM", "Varimax"), pch = c(16,15,17,18), lty = c(1,1,1,1), col = c('blue','red','navy','orange'), bty='n', xpd=NA, cex = 1.3)
dev.off()
setwd('C:/Users/mosleyl/OneDrive - Lancaster University/FromStorm')
lr1 = readRDS('lods_new120_3.rds')
tab = output_table[7:9,4:7]
tab = rbind(tab,unlist(lr1)[1:4])
tab
tab = tab[c(1,2,4,3),]
tab
tab = log(tab)
yl = c(min(tab), max(tab))
pval=c(paste0('p=',18), paste0('p=',60), paste0('p=',120), paste0('p=',180))
par(oma=c(0, 0.5, 0, 6.5))
plot(tab[,1], ylim = yl, xlab = 'Number of variables', main=expression(paste(n == 500, " and ", rho == 0)), ylab = 'log(MAE)', type = 'o', pch = 16, col = 'blue', xaxt = "n", cex.lab = 1.5, cex.axis = 1.5, cex.main = 1.5)
lines(tab[,2], type = 'o', pch = 15, col = 'red')
lines(tab[,3], type = 'o', pch = 17, col = 'navy')
lines(tab[,4], type = 'o', pch = 18, col = 'orange')
axis(1, at=1:4, labels=pval, cex.axis = 1.5, cex.lab = 1.5)
legend(4.2,-1.2,c("SDFM", "SPCA", "DFM", "Varimax"), pch = c(16,15,17,18), lty = c(1,1,1,1), col = c('blue','red','navy','orange'), bty='n', xpd=NA, cex = 1.3)
setwd('C:/Users/mosleyl/OneDrive - Lancaster University/PhD/Nowcasting/Sparse DFM/Simulations')
pdf("lam0500_2.pdf", height=6, width=8)
par(oma=c(0, 0.5, 0, 6.5))
plot(tab[,1], ylim = yl, xlab = 'Number of variables', main=expression(paste(n == 500, " and ", rho == 0)), ylab = 'log(MAE)', type = 'o', pch = 16, col = 'blue', xaxt = "n", cex.lab = 1.5, cex.axis = 1.5, cex.main = 1.5)
lines(tab[,2], type = 'o', pch = 15, col = 'red')
lines(tab[,3], type = 'o', pch = 17, col = 'navy')
lines(tab[,4], type = 'o', pch = 18, col = 'orange')
axis(1, at=1:4, labels=pval, cex.axis = 1.5, cex.lab = 1.5)
legend(4.2,-1.2,c("SDFM", "SPCA", "DFM", "Varimax"), pch = c(16,15,17,18), lty = c(1,1,1,1), col = c('blue','red','navy','orange'), bty='n', xpd=NA, cex = 1.3)
dev.off()
rho = 10
A = matrix(c(0.8,rho,0,
0,0.8,0,
rho,0,0.8),
ncol=3,byrow=TRUE)
A
p = 3
Sigma = diag(p)
Sigma
vV = solve(diag(p^2)-kronecker(A,A)) %*% as.vector(Sigma)
vV
V = matrix(vV,nrow=3,ncol=3)
V
rho = 0.9
A = matrix(c(0.8,rho,0,
0,0.8,0,
rho,0,0.8),
ncol=3,byrow=TRUE)
p = 3
Sigma = diag(p)
vV = solve(diag(p^2)-kronecker(A,A)) %*% as.vector(Sigma)
V = matrix(vV,nrow=3,ncol=3)
V
rho = 0.1
A = matrix(c(0.8,rho,0,
0,0.8,0,
rho,0,0.8),
ncol=3,byrow=TRUE)
p = 3
Sigma = diag(p)
vV = solve(diag(p^2)-kronecker(A,A)) %*% as.vector(Sigma)
V = matrix(vV,nrow=3,ncol=3)
V
A = matrix(c(0.8,0,0,
0,0.8,0,
0,0,0.8),ncol=3,byrow=TRUE)
factors = tsDyn::VAR.sim(A, n, include = 'none', varcov = (1-0.8^2)*diag(r))
n = 200
p 60
p =60
factors = tsDyn::VAR.sim(A, n, include = 'none', varcov = (1-0.8^2)*diag(r))
r=3
factors = tsDyn::VAR.sim(A, n, include = 'none', varcov = (1-0.8^2)*diag(r))
eigen(cov(factors))
A = matrix(c(0.8,0.9,0,
0,0.8,0,
0.9,0,0.8),ncol=3,byrow=TRUE)
factors = tsDyn::VAR.sim(A, n, include = 'none', varcov = (1-0.8^2)*diag(r))
eigen(cov(factors))
Lambda = kronecker(diag(r),rep(1,p/r))
factors = tsDyn::VAR.sim(A, n, include = 'none', varcov = (1-0.8^2)*diag(r))
errors = MASS::mvrnorm(n, mu = rep(0,p), Sigma = 0.2*diag(p))
X = factors %*% t(Lambda) + errors
eigen(cov(X))
eigen(cov(X))$values
round(eigen(cov(X))$values,1)
A = matrix(c(0.8,0,0,
0,0.8,0,
0,0,0.8),ncol=3,byrow=TRUE)
Lambda = kronecker(diag(r),rep(1,p/r))
factors = tsDyn::VAR.sim(A, n, include = 'none', varcov = (1-0.8^2)*diag(r))
errors = MASS::mvrnorm(n, mu = rep(0,p), Sigma = 0.2*diag(p))
X = factors %*% t(Lambda) + errors
round(eigen(cov(X))$values,1)
n = 100
p = 60
r = 3
A = matrix(c(0.8,0,0,
0,0.8,0,
0,0,0.8),ncol=3,byrow=TRUE)
varF = solve(diag(p^2)-kronecker(A,A)) %*% as.vector(diag(r))
n = 100
p = 60
r = 3
A = matrix(c(0.8,0,0,
0,0.8,0,
0,0,0.8),ncol=3,byrow=TRUE)
varF = solve(diag(p^2)-kronecker(A,A)) %*% as.vector(diag(p))
n = 100
p = 60
r = 3
A = matrix(c(0.8,0,0,
0,0.8,0,
0,0,0.8),ncol=3,byrow=TRUE)
varF = solve(diag(r^2)-kronecker(A,A)) %*% as.vector(diag(r))
varF
solve(varF)
varF = matrix(varF, ncol=3)
varF
solve(varF)
n = 1000
p = 60
r = 3
A = matrix(c(0.8,0,0,
0,0.8,0,
0,0,0.8),ncol=3,byrow=TRUE)
varF = solve(diag(r^2)-kronecker(A,A)) %*% as.vector(diag(r))
varF = matrix(varF, ncol=3)
Lambda = kronecker(diag(r),rep(1,p/r))
factors = tsDyn::VAR.sim(A, n, include = 'none', varcov = solve(varF))
errors = MASS::mvrnorm(n, mu = rep(0,p), Sigma = 0.2*diag(p))
X = factors %*% t(Lambda) + errors
cov(factors)
n = 1000
p = 60
r = 3
A = matrix(c(0.8,0.9,0,
0,0.8,0,
0.9,0,0.8),ncol=3,byrow=TRUE)
varF = solve(diag(r^2)-kronecker(A,A)) %*% as.vector(diag(r))
varF = matrix(varF, ncol=3)
Lambda = kronecker(diag(r),rep(1,p/r))
factors = tsDyn::VAR.sim(A, n, include = 'none', varcov = solve(varF))
errors = MASS::mvrnorm(n, mu = rep(0,p), Sigma = 0.2*diag(p))
X = factors %*% t(Lambda) + errors
cov(factors)
solve(varF)%*%varF
n = 1000
p = 60
r = 3
A = matrix(c(0.8,0.9,0,
0,0.8,0,
0.9,0,0.8),ncol=3,byrow=TRUE)
varF = solve(diag(r^2)-kronecker(A,A)) %*% as.vector(diag(r))
varF = matrix(varF, ncol=3)
Lambda = kronecker(diag(r),rep(1,p/r))
factors = tsDyn::VAR.sim(A, n, include = 'none', varcov = diag(r))
cov(factors)
varF
n = 1000
p = 60
r = 3
A = matrix(c(0.8,0.9,0,
0,0.8,0,
0.9,0,0.8),ncol=3,byrow=TRUE)
varF = solve(diag(r^2)-kronecker(A,A)) %*% as.vector(diag(r))
varF = matrix(varF, ncol=3)
Lambda = kronecker(diag(r),rep(1,p/r))
factors = tsDyn::VAR.sim(A, n, include = 'none', varcov = varF)
cov(factors)
n = 1000
p = 60
r = 3
A = matrix(c(0.8,0.9,0,
0,0.8,0,
0.9,0,0.8),ncol=3,byrow=TRUE)
varF = solve(diag(r^2)-kronecker(A,A)) %*% as.vector(diag(r))
varF = matrix(varF, ncol=3)
Lambda = kronecker(diag(r),rep(1,p/r))
factors = tsDyn::VAR.sim(A, n, include = 'none', varcov = diag(diag(varF)))
cov(factors)
n = 1000
p = 60
r = 3
A = matrix(c(0.8,0.9,0,
0,0.8,0,
0.9,0,0.8),ncol=3,byrow=TRUE)
varF = solve(diag(r^2)-kronecker(A,A)) %*% as.vector(diag(r))
varF = matrix(varF, ncol=3)
Lambda = kronecker(diag(r),rep(1,p/r))
factors = tsDyn::VAR.sim(A, n, include = 'none', varcov = diag(r))
cov(factors)
varF
scale(varF)
cov2cor(varF)
n = 1000
p = 60
r = 3
A = matrix(c(0.8,0.9,0,
0,0.8,0,
0.9,0,0.8),ncol=3,byrow=TRUE)
varF = solve(diag(r^2)-kronecker(A,A)) %*% as.vector(diag(r))
varF = matrix(varF, ncol=3)
varF
cov2cor(varF)
n = 1000
p = 60
r = 3
A = matrix(c(0.8,0.9,0,
0,0.8,0,
0.9,0,0.8),ncol=3,byrow=TRUE)
varF = solve(diag(r^2)-kronecker(A,A)) %*% as.vector(diag(r))
varF = matrix(varF, ncol=3)
Lambda = kronecker(diag(r),rep(1,p/r))
factors = tsDyn::VAR.sim(A, n, include = 'none', varcov = solve(varF))
cov(factors)
A = matrix(c(0.8,0.9,0,
0,0.8,0,
0.9,0,0.8),ncol=3,byrow=TRUE)
varF = solve(diag(r^2)-kronecker(A,A)) %*% as.vector(diag(r))
varF = matrix(varF, ncol=3)
D = solve(sqrt(diag(varF)))
varF
sqrt(diag(varF))
D = 1/(sqrt(diag(varF)))
D
D = diag(1/(sqrt(diag(varF))))
D = diag(1/(sqrt(diag(varF))))
D
D %*% varF %*% D
D
n = 1000
p = 60
r = 3
A = matrix(c(0.8,0.9,0,
0,0.8,0,
0.9,0,0.8),ncol=3,byrow=TRUE)
factors = tsDyn::VAR.sim(A, n, include = 'none', varcov = diag(r))
cov(factoes)
cov(factors)
fac = scale(factors, center = FALSE)
cov(fac)
setwd('C:/Users/mosleyl/OneDrive - Lancaster University/PhD/Nowcasting/Package/SparseDFM')
# packages required
library(devtools)
library(roxygen2)
# load package
devtools::load_all()
document()
setwd('C:/Users/mosleyl/OneDrive - Lancaster University/PhD/Nowcasting/Package/SparseDFM')
# packages required
library(devtools)
library(roxygen2)
# load package
devtools::load_all()
document()
devtools::build_rmd("vignettes/inflation-example.Rmd")
devtools::build_rmd("vignettes/inflation-example.Rmd")
