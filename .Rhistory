load("C:/Users/mosleyl/OneDrive - Lancaster University/PhD/Nowcasting/Sparse DFM/SparseDFM-main - Copy/inflation.rda")
X = as.matrix(inflation)
X = diff(X)
fit <- dfms::DFM(X, r = 3, p = 1, rQ = 'none', rR = 'diagonal', em.method = 'BM', pos.corr = TRUE)
plot.dfm(fit, type = 'residua;')
plot.dfm(fit, type = 'residual')
dfms::plot.dfm(fit, type = 'residual')
plot(fit, type = 'residual')
head(fit$X_imp)
head(fit$C)
head(as.matrix(fit$C))
cc = fit$C
View(cc)
summary(fit)
dimnames(fit$X_imp)
dimnames(X)
n = 100 # obs
k = 0 # targets not being regularised
p = 60 # indicators being regularised
r = 3 # factors
phi = 0.6 # var
pstar = p + k # total dimension
# Dense loadings
loadings = MASS::mvrnorm(pstar, mu = rep(0,r), Sigma = diag(r))
# Sparse loadings
# loadings = kronecker(diag(3),rep(3,20))
# Sparse loadings with k=6 targets not being regularised
# beta = matrix(rep(c(3,2,1, 1,2,3, 2,1,3),2), ncol = r, byrow = TRUE)
# loadings = rbind(beta, loadings)
# VAR(1) factors
factors = tsDyn::VAR.sim(phi*diag(r), n, include = 'none', varcov = diag(r))
# IID errors
errors = MASS::mvrnorm(n, mu = rep(0,pstar), Sigma = diag(pstar))
# AR(1) errors
# errors = tsDyn::VAR.sim(0.7*diag(pstar), n, include = 'none', varcov = diag(pstar))
Y = factors %*% t(loadings) + errors
dimnames(Y)
paste('PC',1:3)
paste0('PC',1:3)
paste0('F',1:3)
paste0('f',1:3)
fit
setwd('C:/Users/mosleyl/OneDrive - Lancaster University/PhD/Nowcasting/Package/SparseDFM')
library(devtools)
library(roxygen2)
devtools::load_all()
document()
X = as.matrix(inflation)
X = diff(X)
fit2 <- SparseDFM(X, r = 3, q =0, alg = 'EM', err = 'IID', kalman = 'univariate')
devtools::load_all()
document()
fit2 <- SparseDFM(X, r = 3, q =0, alg = 'EM', err = 'IID', kalman = 'univariate')
dimnames(fit2$data$X)
dimnames(fit2$data$X.bal)
dimnames(fit2$data$fitted)
dimnames(fit2$data$fitted)
ff = fit2$data$fitted
dimnames(ff) = dimnames(X)
dimnames(ff)
# label variables
series.names = dimnames(X)[2]
factor.names = paste0('F',1:r)
list(series.names, factor.names)
devtools::load_all()
devtools::load_all()
devtools::load_all()
document()
X = as.matrix(inflation)
X = diff(X)
fit2 <- SparseDFM(X, r = 3, q =0, alg = 'PCA', err = 'AR1', kalman = 'univariate')
# label variables
obs.names = dimnames(X)[1]
series.names = dimnames(X)[2]
factor.names = paste0('F',1:r)
list(obs.names, factor.names)
obs.names
dimnames(X)[1]
dimnames(X)[2]
as.vector(dimnames(X)[1])
unlist(dimnames(X)[1])
devtools::load_all()
document()
X = as.matrix(inflation)
X = diff(X)
fit2 <- SparseDFM(X, r = 3, q =0, alg = 'PCA', err = 'AR1', kalman = 'univariate')
fit2$data$fitted
fit2$params$A
fit2$params$Lambda
plot(fit2, type = 'residual')
plot(fit2, type = 'loading.heatmap', which.series = 1:10)
devtools::load_all()
document()
X = as.matrix(inflation)
X = diff(X)
fit2 <- SparseDFM(X, r = 3, q =0, alg = 'PCA', err = 'AR1', kalman = 'univariate')
plot(fit2, type = 'loading.heatmap', which.series = 1:10)
devtools::load_all()
document()
fit2 <- SparseDFM(X, r = 3, q =0, alg = 'PCA', err = 'AR1', kalman = 'univariate')
plot(fit2, type = 'loading.heatmap', which.series = 1:10)
devtools::load_all()
document()
fit2 <- SparseDFM(X, r = 3, q =0, alg = 'PCA', err = 'AR1', kalman = 'univariate')
plot(fit2, type = 'loading.heatmap', which.series = 1:10)
devtools::load_all()
document()
fit2 <- SparseDFM(X, r = 3, q =0, alg = 'PCA', err = 'AR1', kalman = 'univariate')
plot(fit2, type = 'loading.heatmap', which.series = 1:10)
devtools::load_all()
document()
fit2 <- SparseDFM(X, r = 3, q =0, alg = 'PCA', err = 'AR1', kalman = 'univariate')
plot(fit2, type = 'loading.heatmap', which.series = 1:10)
